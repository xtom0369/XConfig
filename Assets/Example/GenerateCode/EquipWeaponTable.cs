//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using UnityEngine;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System;
using XConfig;

public partial class Config
{
	[BindConfigFileName("equip_weapon")]
	public EquipWeaponTable equipWeaponTable = new EquipWeaponTable();
}
[BindConfigFileName("equip_weapon")]
public partial class EquipWeaponTable : XTable<int, EquipWeaponRow>
{
	public override void Init()
	{
		_mainKey2Row = new Dictionary<int, EquipWeaponRow>();
		for (int i = 0; i < _rows.Count; i++)
		{
			EquipWeaponRow row = _rows[i];
			int mainKey = row.Id;
			DebugUtil.Assert(!_mainKey2Row.ContainsKey(mainKey), "{0} 主键重复：{1}，请先按键盘【alt+r】导出配置试试！", name, mainKey);
			_mainKey2Row.Add(mainKey, row);
		}
	}
	public void AddRow(EquipWeaponRow row)
	{
		if (!_mainKey2Row.ContainsKey(row.Id))
		{
			_rows.Add(row);
			_mainKey2Row.Add(row.Id, row);
			Config.Inst.masterEquipmentTable.AddRow(row);//子表才需要往总表添加
		}
	}
	public override void OnInit()
	{
		for (int i = 0; i < _rows.Count; i++)
			_rows[i].OnAfterInit();
		for (int i = 0; i < _rows.Count; i++)//子表才需要往总表添加
			Config.Inst.masterEquipmentTable.AddRow(_rows[i]);

		OnAfterInit();
	}
}
[BindConfigFileName("equip_weapon")]
public partial class EquipWeaponRow : MasterEquipmentRow
{
	public string AnimatorResPath { get { return _animatorResPath; }}
	string _animatorResPath;
	public override void ReadFromBytes(BytesBuffer buffer)
	{
		base.ReadFromBytes(buffer);
		if (buffer.ReadByte() == 1) { StringType.ReadFromBytes(buffer, out String value); _animatorResPath = (string)value;}
		else _animatorResPath = string.Empty;
		rowIndex = buffer.ReadInt32();
	}
}
